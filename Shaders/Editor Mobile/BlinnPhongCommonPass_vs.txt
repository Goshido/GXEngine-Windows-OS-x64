#version 330 core


#define CURRENT_VERTEX_STREAM		0
#define UV_STREAM					1
#define CURRENT_NORMAL_STREAM		2
#define CURRENT_TANGENT_STREAM		3
#define CURRENT_BITANGENT_STREAM	4
#define LAST_FRAME_VERTEX_STREAM	7
#define OBJECT_HI_STREAM			14
#define OBJECT_LOW_STREAM			15


layout ( location = CURRENT_VERTEX_STREAM ) in vec3 currentVertex;
layout ( location = UV_STREAM ) in vec2 uv;
layout ( location = CURRENT_NORMAL_STREAM ) in vec3 currentNormal;
layout ( location = CURRENT_TANGENT_STREAM ) in vec3 currentTangent;
layout ( location = CURRENT_BITANGENT_STREAM ) in vec3 currentBitangent;
layout ( location = LAST_FRAME_VERTEX_STREAM ) in vec3 lastFrameVertex;
layout ( location = OBJECT_HI_STREAM ) in vec4 objectHi;
layout ( location = OBJECT_LOW_STREAM ) in vec4 objectLow;

uniform mat4 currentModelViewProjectionMatrix;
uniform mat3 currentRotationViewMatrix;
uniform mat4 currentModelViewMatrix;
uniform mat4 lastFrameModelViewMatrix;

uniform vec4 diffuseTextureScaleOffset;
uniform vec4 normalTextureScaleOffset;
uniform vec4 specularTextureScaleOffset;
uniform vec4 emissionTextureScaleOffset;

uniform float inverseDeltaTime;

smooth out vec2 v_uvDiffuse;
smooth out vec2 v_uvNormal;
smooth out vec2 v_uvSpecular;
smooth out vec2 v_uvEmission;

smooth out vec3 v_velocityView;

smooth out vec3 v_normalView;
smooth out vec3 v_tangentView;
smooth out vec3 v_bitangentView;

flat out vec4 v_objectHi;
flat out vec4 v_objectLow;


void main ()
{
	vec4 v = vec4 ( currentVertex, 1.0 );
	gl_Position = currentModelViewProjectionMatrix * v;

	v_uvDiffuse = uv * diffuseTextureScaleOffset.xy + diffuseTextureScaleOffset.zw;
	v_uvNormal = uv * normalTextureScaleOffset.xy + normalTextureScaleOffset.zw;
	v_uvSpecular = uv * specularTextureScaleOffset.xy + specularTextureScaleOffset.zw;
	v_uvEmission = uv * emissionTextureScaleOffset.xy + emissionTextureScaleOffset.zw;

	vec4 currentLocationView = currentModelViewMatrix * v;
	vec4 lastFrameLocationView = lastFrameModelViewMatrix * vec4 ( lastFrameVertex, 1.0 );
	v_velocityView = ( currentLocationView.xyz - lastFrameLocationView.xyz ) * inverseDeltaTime;

	v_normalView = currentRotationViewMatrix * currentNormal;
	v_tangentView = currentRotationViewMatrix * currentTangent;
	v_bitangentView = currentRotationViewMatrix * currentBitangent;

	v_objectHi = objectHi;
	v_objectLow = objectLow;
}
