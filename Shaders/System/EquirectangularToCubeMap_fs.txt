#version 330 core


#define COLOR_SLOT						0
#define FRONT_TO_POSITIVE_Z_ROTATION	-1.570796
#define INVERSE_PI						0.318309
#define INVERSE_DOUBLE_PI				0.159154


const vec2 invAtan = vec2 ( INVERSE_DOUBLE_PI, INVERSE_PI );


smooth in vec3 g_locationWorld;

uniform sampler2D equirectangularSampler;
uniform float gamma;

layout ( location = COLOR_SLOT ) out vec4 colorSlot;


void main ()
{
	vec3 directionWorld = normalize ( g_locationWorld );

	vec2 uv = vec2 ( atan ( directionWorld.z, directionWorld.x ), asin ( directionWorld.y ) );
	uv.x += FRONT_TO_POSITIVE_Z_ROTATION;
	uv = 1.0 - ( uv * invAtan + 0.5 );

	vec4 sample = texture ( equirectangularSampler, uv );

	if ( gamma == 1.0)
		colorSlot = sample;
	else
		colorSlot = vec4 ( pow ( sample.rgb, vec3 ( gamma ) ), sample.a );
}
